{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"VK SDK Android \u00b6 Some Android-specific features built into Unofficial VK SDK for Android The official VK Android SDK is monstrous, has poor API, does not contain some important features and their code leaves much to be desired. This is the reason why this SDK is created. See the available features below. See the documentation: https://vksdk.github.io/vk-sdk-android Auth \u00b6 Latest version: Authorization code flow is not supported by the official VK SDK and by the official app. But it is supported by this auth feature. Easiest way to authorize user with VK and get the token: // From here: https://vk.com/apps?act=manage // Choose the app and get the ID from here: https://vk.com/editapp?id=XXX // Or go here: https://vk.com/editapp?id=XXX&section=options and see the App ID val appId = 1 val scopes = listOf ( VkAuth . Scope . Offline , VkAuth . Scope . Email ) VkAuth . login ( activity , appId , VkAuth . ResponseType . AccessToken , scopes ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { // do something with result.accessToken } is VkAuthResult . Error -> { // do something with result.error } } } Install \u00b6 Library is uploaded to the Maven Central Repository. Add the following line to your dependencies: implementation \"com.petersamokhin.vksdk.android:auth:$vkSdkAndroidVersion\" For other information and for details, see the documentation: https://vksdk.github.io/vk-sdk-android/auth/ 3rd party \u00b6 Kotlin, dokka gradle-maven-publish-plugin License \u00b6 See the License","title":"Overview"},{"location":"#vk-sdk-android","text":"Some Android-specific features built into Unofficial VK SDK for Android The official VK Android SDK is monstrous, has poor API, does not contain some important features and their code leaves much to be desired. This is the reason why this SDK is created. See the available features below. See the documentation: https://vksdk.github.io/vk-sdk-android","title":"VK SDK Android"},{"location":"#auth","text":"Latest version: Authorization code flow is not supported by the official VK SDK and by the official app. But it is supported by this auth feature. Easiest way to authorize user with VK and get the token: // From here: https://vk.com/apps?act=manage // Choose the app and get the ID from here: https://vk.com/editapp?id=XXX // Or go here: https://vk.com/editapp?id=XXX&section=options and see the App ID val appId = 1 val scopes = listOf ( VkAuth . Scope . Offline , VkAuth . Scope . Email ) VkAuth . login ( activity , appId , VkAuth . ResponseType . AccessToken , scopes ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { // do something with result.accessToken } is VkAuthResult . Error -> { // do something with result.error } } }","title":"Auth"},{"location":"#install","text":"Library is uploaded to the Maven Central Repository. Add the following line to your dependencies: implementation \"com.petersamokhin.vksdk.android:auth:$vkSdkAndroidVersion\" For other information and for details, see the documentation: https://vksdk.github.io/vk-sdk-android/auth/","title":"Install"},{"location":"#3rd-party","text":"Kotlin, dokka gradle-maven-publish-plugin","title":"3rd party"},{"location":"#license","text":"See the License","title":"License"},{"location":"auth/","text":"VK SDK Android \u2014 Auth \u00b6 For the detailed information about the VK auth process, see the official documentation: https://vk.com/dev/access_token Ways to show the login page \u00b6 If user had installed the official VK App, you can ask for the access without user need to enter the login and password. But Authorization code flow is not supported either by the VK App or by official SDK. Otherwise, WebView will be used and user will be used to enter their credentials only the first time. Using the VK SDK Android \u2014 Auth feature, you can: - use login method and way to show the page will be chosen automatically - force to use the WebView using the VkAuth.loginWithWebView methods - force to use the VK App using the VkAuth.loginWithApp methods - exception will be thrown if app is not installed, but you can manually check this fact using the method VkAuth.isVkAppInstalled Ways to retrieve the auth result \u00b6 In both cases, with the VK App or with WebView, some Activities will be opened using the startActivityForResult method. Use the inline callback \u00b6 androidx.fragment.app.FragmentActivity (e.g. AppCompatActivity ) is required as the first param: class MainActivity : androidx . appcompat . app . AppCompatActivity ( R . layout . activity_main ) { override fun onCreate ( savedInstanceState : Bundle ?) { super . onCreate ( savedInstanceState ) someButton . setOnClickListener { VkAuth . login ( this , /* Parameters */ ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } } } } Use the onActivityResult \u00b6 Use any activity as the first param, but override the onActivityResult : class MainActivity : android . app . Activity () { override fun onCreate ( savedInstanceState : Bundle ?) { super . onCreate ( savedInstanceState ) setContentView ( R . layout . activity_main ) someButton . setOnClickListener { VkAuth . login ( this , /* Parameters */ ) } } override fun onActivityResult ( requestCode : Int , resultCode : Int , data : Intent ?) { val result = VkAuth . parseResult ( requestCode , resultCode , data ) ?: return super . onActivityResult ( requestCode , resultCode , data ) when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } } Parameters \u00b6 // For the first way val activity : Activity = this // For the second way val activity : FragmentActivity = this // From here: https://vk.com/apps?act=manage // Choose the app and get the ID from here: https://vk.com/editapp?id=XXX // Or go here: https://vk.com/editapp?id=XXX&section=options and see the App ID val appId = 1 // See: https://vk.com/dev/implicit_flow_user val responseType = VkAuth . ResponseType . AccessToken // See: https://vk.com/dev/authcode_flow_user // Only needed if you use server-side auth // Only supported using WebView; ignored by the VK App val responseType = VkAuth . ResponseType . Code // See: https://vk.com/dev/permissions // Can be empty, so token will be valid for the one day // and you will be able to retrieve the basic user info. // You can use the comma-separated string values val scopes = \"offline,email\" // Or int values val scopes = 65536 + 4194304 // Or pre-defined constants val scopes = listOf ( VkAuth . Scope . Offline , VkAuth . Scope . Email ) // Redirect URL after the successful or unsuccessful auth // This page will not be shown. // Default is VkAuth.VK_REDIRECT_URI_DEFAULT = \"https://oauth.vk.com/blank.html\" val redirectUri = \"YourCustomRedirectUri\" // The display type of the auth page // Default is VkAuth.Display.Mobile // .Android and .Ios are the private values used by the official VK Apps // because official apps also use WebView // Only supported using WebView; ignored by the VK App val display = VkAuth . Display . Mobile // this is the default and recommended value // An arbitrary string that will be returned together with authorization result. // Only supported using WebView; ignored by the VK App val state = \"test_1234\" // empty by default // Sets that permissions request should not be skipped even if a user is already authorized. // If set to false, the web page will not be shown val revoke = true // true by default // See: https://vk.com/dev/versions val apiVersion = 5.103 // 5.103 by default // if activity is FragmentActivity, you can use the callback val callback = object : ResultListener { override fun onResult ( result : VkAuthResult ) { // do something with result.accessToken, result.code or result.error } } // or for Kotlin val callback = { result : VkAuthResult -> // do something with result.accessToken, result.code or result.error } You can pass all the parameters directly: VkAuth . login ( activity , appId , responseType , // all the other parameters are optional scopes , redirectUri , display , state , revoke , apiVersion , callback // only if you want to get the inline result ) Or use VkAuth.AuthParams : val params = VkAuth . AuthParams ( appId , responseType , // all the other parameters are optional scopes , redirectUri , display , state , revoke , apiVersion ) VkAuth . login ( activity , params , callback ) Handle the result \u00b6 VkAuthResult is a sealed class. If responseType is VkAuth.ResponseType.AccessToken , you will get the VkAuthResult.AccessToken . If responseType is VkAuth.ResponseType.Code , you will get the VkAuthResult.Code . If auth is unsuccesfull and some error occured, you will get the VkAuthResult.Error . Check the error , errorReason and errorDescription fields of the result. But if page wasn't shown and some error occurred before the auth process, these fields will be empty and exception field will contain the exception. Example for AccessToken : val params = VkAuth . AuthParams ( appId , VkAuth . ResponseType . AccessToken ) VkAuth . login ( activity , params ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken, result.expiresIn, result.userId, etc. */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } Example for Code : val params = VkAuth . AuthParams ( appId , VkAuth . ResponseType . Code ) VkAuth . login ( activity , params ) { result -> when ( result ) { is VkAuthResult . Code -> { /* do something with result.code, result.state */ } is VkAuthResult . Error -> { /* do something with result.error, etc. or with result.exception */ } } }","title":"Auth"},{"location":"auth/#vk-sdk-android-auth","text":"For the detailed information about the VK auth process, see the official documentation: https://vk.com/dev/access_token","title":"VK SDK Android \u2014 Auth"},{"location":"auth/#ways-to-show-the-login-page","text":"If user had installed the official VK App, you can ask for the access without user need to enter the login and password. But Authorization code flow is not supported either by the VK App or by official SDK. Otherwise, WebView will be used and user will be used to enter their credentials only the first time. Using the VK SDK Android \u2014 Auth feature, you can: - use login method and way to show the page will be chosen automatically - force to use the WebView using the VkAuth.loginWithWebView methods - force to use the VK App using the VkAuth.loginWithApp methods - exception will be thrown if app is not installed, but you can manually check this fact using the method VkAuth.isVkAppInstalled","title":"Ways to show the login page"},{"location":"auth/#ways-to-retrieve-the-auth-result","text":"In both cases, with the VK App or with WebView, some Activities will be opened using the startActivityForResult method.","title":"Ways to retrieve the auth result"},{"location":"auth/#use-the-inline-callback","text":"androidx.fragment.app.FragmentActivity (e.g. AppCompatActivity ) is required as the first param: class MainActivity : androidx . appcompat . app . AppCompatActivity ( R . layout . activity_main ) { override fun onCreate ( savedInstanceState : Bundle ?) { super . onCreate ( savedInstanceState ) someButton . setOnClickListener { VkAuth . login ( this , /* Parameters */ ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } } } }","title":"Use the inline callback"},{"location":"auth/#use-the-onactivityresult","text":"Use any activity as the first param, but override the onActivityResult : class MainActivity : android . app . Activity () { override fun onCreate ( savedInstanceState : Bundle ?) { super . onCreate ( savedInstanceState ) setContentView ( R . layout . activity_main ) someButton . setOnClickListener { VkAuth . login ( this , /* Parameters */ ) } } override fun onActivityResult ( requestCode : Int , resultCode : Int , data : Intent ?) { val result = VkAuth . parseResult ( requestCode , resultCode , data ) ?: return super . onActivityResult ( requestCode , resultCode , data ) when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } }","title":"Use the onActivityResult"},{"location":"auth/#parameters","text":"// For the first way val activity : Activity = this // For the second way val activity : FragmentActivity = this // From here: https://vk.com/apps?act=manage // Choose the app and get the ID from here: https://vk.com/editapp?id=XXX // Or go here: https://vk.com/editapp?id=XXX&section=options and see the App ID val appId = 1 // See: https://vk.com/dev/implicit_flow_user val responseType = VkAuth . ResponseType . AccessToken // See: https://vk.com/dev/authcode_flow_user // Only needed if you use server-side auth // Only supported using WebView; ignored by the VK App val responseType = VkAuth . ResponseType . Code // See: https://vk.com/dev/permissions // Can be empty, so token will be valid for the one day // and you will be able to retrieve the basic user info. // You can use the comma-separated string values val scopes = \"offline,email\" // Or int values val scopes = 65536 + 4194304 // Or pre-defined constants val scopes = listOf ( VkAuth . Scope . Offline , VkAuth . Scope . Email ) // Redirect URL after the successful or unsuccessful auth // This page will not be shown. // Default is VkAuth.VK_REDIRECT_URI_DEFAULT = \"https://oauth.vk.com/blank.html\" val redirectUri = \"YourCustomRedirectUri\" // The display type of the auth page // Default is VkAuth.Display.Mobile // .Android and .Ios are the private values used by the official VK Apps // because official apps also use WebView // Only supported using WebView; ignored by the VK App val display = VkAuth . Display . Mobile // this is the default and recommended value // An arbitrary string that will be returned together with authorization result. // Only supported using WebView; ignored by the VK App val state = \"test_1234\" // empty by default // Sets that permissions request should not be skipped even if a user is already authorized. // If set to false, the web page will not be shown val revoke = true // true by default // See: https://vk.com/dev/versions val apiVersion = 5.103 // 5.103 by default // if activity is FragmentActivity, you can use the callback val callback = object : ResultListener { override fun onResult ( result : VkAuthResult ) { // do something with result.accessToken, result.code or result.error } } // or for Kotlin val callback = { result : VkAuthResult -> // do something with result.accessToken, result.code or result.error } You can pass all the parameters directly: VkAuth . login ( activity , appId , responseType , // all the other parameters are optional scopes , redirectUri , display , state , revoke , apiVersion , callback // only if you want to get the inline result ) Or use VkAuth.AuthParams : val params = VkAuth . AuthParams ( appId , responseType , // all the other parameters are optional scopes , redirectUri , display , state , revoke , apiVersion ) VkAuth . login ( activity , params , callback )","title":"Parameters"},{"location":"auth/#handle-the-result","text":"VkAuthResult is a sealed class. If responseType is VkAuth.ResponseType.AccessToken , you will get the VkAuthResult.AccessToken . If responseType is VkAuth.ResponseType.Code , you will get the VkAuthResult.Code . If auth is unsuccesfull and some error occured, you will get the VkAuthResult.Error . Check the error , errorReason and errorDescription fields of the result. But if page wasn't shown and some error occurred before the auth process, these fields will be empty and exception field will contain the exception. Example for AccessToken : val params = VkAuth . AuthParams ( appId , VkAuth . ResponseType . AccessToken ) VkAuth . login ( activity , params ) { result -> when ( result ) { is VkAuthResult . AccessToken -> { /* do something with result.accessToken, result.expiresIn, result.userId, etc. */ } is VkAuthResult . Error -> { /* do something with result.error */ } } } Example for Code : val params = VkAuth . AuthParams ( appId , VkAuth . ResponseType . Code ) VkAuth . login ( activity , params ) { result -> when ( result ) { is VkAuthResult . Code -> { /* do something with result.code, result.state */ } is VkAuthResult . Error -> { /* do something with result.error, etc. or with result.exception */ } } }","title":"Handle the result"},{"location":"changelog-auth/","text":"Change log \u00b6 Version 0.0.2 (2020-04-27) \u00b6 Fixed instrumental tests Fixed showing web page errors and retry dialog on Lollipop+ Added return of the error description after the web page error Version 0.0.1 (2020-04-27) \u00b6 First release.","title":"Changelog: Auth"},{"location":"changelog-auth/#change-log","text":"","title":"Change log"},{"location":"changelog-auth/#version-002-2020-04-27","text":"Fixed instrumental tests Fixed showing web page errors and retry dialog on Lollipop+ Added return of the error description after the web page error","title":"Version 0.0.2 (2020-04-27)"},{"location":"changelog-auth/#version-001-2020-04-27","text":"First release.","title":"Version 0.0.1 (2020-04-27)"},{"location":"0.0.x/auth/","text":"auth Packages \u00b6 Name Summary com.petersamokhin.vksdk.android.auth com.petersamokhin.vksdk.android.auth.error com.petersamokhin.vksdk.android.auth.model Index \u00b6 All Types","title":"Packages - VK SDK Android"},{"location":"0.0.x/auth/#packages","text":"Name Summary com.petersamokhin.vksdk.android.auth com.petersamokhin.vksdk.android.auth.error com.petersamokhin.vksdk.android.auth.model","title":"Packages"},{"location":"0.0.x/auth/#index","text":"All Types","title":"Index"},{"location":"0.0.x/auth/alltypes/","text":"All Types \u00b6 Name Summary com.petersamokhin.vksdk.android.auth.BuildConfig com.petersamokhin.vksdk.android.auth.BuildConfig com.petersamokhin.vksdk.android.auth.error.VkAppMissingException Thrown if the official VK App is not installed com.petersamokhin.vksdk.android.auth.VkAuth VK authorization handler. com.petersamokhin.vksdk.android.auth.error.VkAuthCanceledException When user cancelled the auth process. com.petersamokhin.vksdk.android.auth.error.VkAuthException Base error com.petersamokhin.vksdk.android.auth.model.VkAuthResult Authorization result based on the type of auth and on successfullness.","title":"All Types - VK SDK Android"},{"location":"0.0.x/auth/alltypes/#all-types","text":"Name Summary com.petersamokhin.vksdk.android.auth.BuildConfig com.petersamokhin.vksdk.android.auth.BuildConfig com.petersamokhin.vksdk.android.auth.error.VkAppMissingException Thrown if the official VK App is not installed com.petersamokhin.vksdk.android.auth.VkAuth VK authorization handler. com.petersamokhin.vksdk.android.auth.error.VkAuthCanceledException When user cancelled the auth process. com.petersamokhin.vksdk.android.auth.error.VkAuthException Base error com.petersamokhin.vksdk.android.auth.model.VkAuthResult Authorization result based on the type of auth and on successfullness.","title":"All Types"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/","text":"auth / com.petersamokhin.vksdk.android.auth Package com.petersamokhin.vksdk.android.auth \u00b6 Types \u00b6 Name Summary BuildConfig class BuildConfig class BuildConfig VkAuth object VkAuth VK authorization handler.","title":"Package com.petersamokhin.vksdk.android.auth - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/#package-competersamokhinvksdkandroidauth","text":"","title":"Package com.petersamokhin.vksdk.android.auth"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/#types","text":"Name Summary BuildConfig class BuildConfig class BuildConfig VkAuth object VkAuth VK authorization handler.","title":"Types"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig BuildConfig \u00b6 class BuildConfig class BuildConfig","title":"BuildConfig - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/#buildconfig","text":"class BuildConfig class BuildConfig","title":"BuildConfig"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-a-p-p-l-i-c-a-t-i-o-n_-i-d/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / APPLICATION_ID APPLICATION_ID \u00b6 static val APPLICATION_ID: String static val APPLICATION_ID: String","title":"APPLICATION_ID - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-a-p-p-l-i-c-a-t-i-o-n_-i-d/#application_id","text":"static val APPLICATION_ID: String static val APPLICATION_ID: String","title":"APPLICATION_ID"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-b-u-i-l-d_-t-y-p-e/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / BUILD_TYPE BUILD_TYPE \u00b6 static val BUILD_TYPE: String static val BUILD_TYPE: String","title":"BUILD_TYPE - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-b-u-i-l-d_-t-y-p-e/#build_type","text":"static val BUILD_TYPE: String static val BUILD_TYPE: String","title":"BUILD_TYPE"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-d-e-b-u-g/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / DEBUG DEBUG \u00b6 static val DEBUG: Boolean static val DEBUG: Boolean","title":"DEBUG - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-d-e-b-u-g/#debug","text":"static val DEBUG: Boolean static val DEBUG: Boolean","title":"DEBUG"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-f-l-a-v-o-r/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / FLAVOR FLAVOR \u00b6 static val FLAVOR: String static val FLAVOR: String","title":"FLAVOR - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-f-l-a-v-o-r/#flavor","text":"static val FLAVOR: String static val FLAVOR: String","title":"FLAVOR"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth / BuildConfig / <init> <init> \u00b6 BuildConfig() BuildConfig()","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-init-/#init","text":"BuildConfig() BuildConfig()","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-l-i-b-r-a-r-y_-p-a-c-k-a-g-e_-n-a-m-e/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / LIBRARY_PACKAGE_NAME LIBRARY_PACKAGE_NAME \u00b6 static val LIBRARY_PACKAGE_NAME: String static val LIBRARY_PACKAGE_NAME: String","title":"LIBRARY_PACKAGE_NAME - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-l-i-b-r-a-r-y_-p-a-c-k-a-g-e_-n-a-m-e/#library_package_name","text":"static val LIBRARY_PACKAGE_NAME: String static val LIBRARY_PACKAGE_NAME: String","title":"LIBRARY_PACKAGE_NAME"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-v-e-r-s-i-o-n_-c-o-d-e/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / VERSION_CODE VERSION_CODE \u00b6 static val VERSION_CODE: Int static val VERSION_CODE: Int","title":"VERSION_CODE - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-v-e-r-s-i-o-n_-c-o-d-e/#version_code","text":"static val VERSION_CODE: Int static val VERSION_CODE: Int","title":"VERSION_CODE"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-v-e-r-s-i-o-n_-n-a-m-e/","text":"auth / com.petersamokhin.vksdk.android.auth / BuildConfig / VERSION_NAME VERSION_NAME \u00b6 static val VERSION_NAME: String static val VERSION_NAME: String","title":"VERSION_NAME - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-build-config/-v-e-r-s-i-o-n_-n-a-m-e/#version_name","text":"static val VERSION_NAME: String static val VERSION_NAME: String","title":"VERSION_NAME"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth VkAuth \u00b6 object VkAuth VK authorization handler. Types \u00b6 Name Summary AuthParams data class AuthParams All necessary auth params Display enum class Display Display type of the authorization page. Prefer to use Mobile . Android and Ios are private type of the VK official clients. DisposableItem interface DisposableItem Some disposable item ResponseType enum class ResponseType Response type: access_token or code ResultListener interface ResultListener Inline listener for the auth result Scope enum class Scope Access token scope permissions See: https://vk.com/dev/permissions Properties \u00b6 Name Summary VK_API_VERSION_DEFAULT const val VK_API_VERSION_DEFAULT: Double VK_REDIRECT_URI_DEFAULT const val VK_REDIRECT_URI_DEFAULT: String Functions \u00b6 Name Summary isVkAppInstalled fun isVkAppInstalled(context: Context): Boolean Checks is the official VK app installed to be able to authorize through the app without the WebView login fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun login(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: loginWithApp fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithApp(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: loginWithWebView fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithWebView(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: parseResult fun parseResult(requestCode: Int , resultCode: Int , data: Intent?): VkAuthResult ? The authorization result returned by the activity with WebView or from VK App can be parsed using this method.","title":"VkAuth - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/#vkauth","text":"object VkAuth VK authorization handler.","title":"VkAuth"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/#types","text":"Name Summary AuthParams data class AuthParams All necessary auth params Display enum class Display Display type of the authorization page. Prefer to use Mobile . Android and Ios are private type of the VK official clients. DisposableItem interface DisposableItem Some disposable item ResponseType enum class ResponseType Response type: access_token or code ResultListener interface ResultListener Inline listener for the auth result Scope enum class Scope Access token scope permissions See: https://vk.com/dev/permissions","title":"Types"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/#properties","text":"Name Summary VK_API_VERSION_DEFAULT const val VK_API_VERSION_DEFAULT: Double VK_REDIRECT_URI_DEFAULT const val VK_REDIRECT_URI_DEFAULT: String","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/#functions","text":"Name Summary isVkAppInstalled fun isVkAppInstalled(context: Context): Boolean Checks is the official VK app installed to be able to authorize through the app without the WebView login fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun login(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: loginWithApp fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithApp(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: loginWithWebView fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit fun loginWithWebView(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: parseResult fun parseResult(requestCode: Int , resultCode: Int , data: Intent?): VkAuthResult ? The authorization result returned by the activity with WebView or from VK App can be parsed using this method.","title":"Functions"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-v-k_-a-p-i_-v-e-r-s-i-o-n_-d-e-f-a-u-l-t/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / VK_API_VERSION_DEFAULT VK_API_VERSION_DEFAULT \u00b6 const val VK_API_VERSION_DEFAULT: Double","title":"VK_API_VERSION_DEFAULT - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-v-k_-a-p-i_-v-e-r-s-i-o-n_-d-e-f-a-u-l-t/#vk_api_version_default","text":"const val VK_API_VERSION_DEFAULT: Double","title":"VK_API_VERSION_DEFAULT"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-v-k_-r-e-d-i-r-e-c-t_-u-r-i_-d-e-f-a-u-l-t/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / VK_REDIRECT_URI_DEFAULT VK_REDIRECT_URI_DEFAULT \u00b6 const val VK_REDIRECT_URI_DEFAULT: String","title":"VK_REDIRECT_URI_DEFAULT - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-v-k_-r-e-d-i-r-e-c-t_-u-r-i_-d-e-f-a-u-l-t/#vk_redirect_uri_default","text":"const val VK_REDIRECT_URI_DEFAULT: String","title":"VK_REDIRECT_URI_DEFAULT"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/is-vk-app-installed/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / isVkAppInstalled isVkAppInstalled \u00b6 @JvmStatic fun isVkAppInstalled(context: Context): Boolean Checks is the official VK app installed to be able to authorize through the app without the WebView","title":"isVkAppInstalled - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/is-vk-app-installed/#isvkappinstalled","text":"@JvmStatic fun isVkAppInstalled(context: Context): Boolean Checks is the official VK app installed to be able to authorize through the app without the WebView","title":"isVkAppInstalled"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login-with-app/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / loginWithApp loginWithApp \u00b6 @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener Return Disposable item: clear listeners when it needed @JvmStatic fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithApp(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if the VK App is not installed, the exception will be thrown if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"loginWithApp - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login-with-app/#loginwithapp","text":"@JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic @CheckResult fun loginWithApp(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener Return Disposable item: clear listeners when it needed @JvmStatic fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithApp(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithApp(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if the VK App is not installed, the exception will be thrown if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"loginWithApp"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login-with-web-view/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / loginWithWebView loginWithWebView \u00b6 @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener Return Disposable item: clear listeners when it needed @JvmStatic fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithWebView(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"loginWithWebView - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login-with-web-view/#loginwithwebview","text":"@JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic @CheckResult fun loginWithWebView(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener Return Disposable item: clear listeners when it needed @JvmStatic fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithWebView(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun loginWithWebView(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"loginWithWebView"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / login login \u00b6 @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun login(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult in both cases.","title":"login - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/login/#login","text":"@JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT, listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: VkAuth.ResultListener ): VkAuth.DisposableItem @JvmStatic @CheckResult fun login(fragmentActivity: FragmentActivity, authParams: VkAuth.AuthParams , listener: ( VkAuthResult ) -> Unit ): VkAuth.DisposableItem Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to listener @JvmStatic fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun login(activity: Activity, clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = VK_API_VERSION_DEFAULT): Unit @JvmStatic fun login(activity: Activity, authParams: VkAuth.AuthParams ): Unit Login with VK using the available methods: if VK App is installed, it will be used if you need the code instead of access_token , WebView the only way to retrieve it result will be returned to activity 's method Activity.onActivityResult in both cases.","title":"login"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/parse-result/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / parseResult parseResult \u00b6 @JvmStatic @CheckResult fun parseResult(requestCode: Int , resultCode: Int , data: Intent?): VkAuthResult ? The authorization result returned by the activity with WebView or from VK App can be parsed using this method. Parameters \u00b6 requestCode - See Activity.onActivityResult resultCode - See Activity.onActivityResult data - See Activity.onActivityResult Return Parsed authorization result, null if requestCode is wrong","title":"parseResult - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/parse-result/#parseresult","text":"@JvmStatic @CheckResult fun parseResult(requestCode: Int , resultCode: Int , data: Intent?): VkAuthResult ? The authorization result returned by the activity with WebView or from VK App can be parsed using this method.","title":"parseResult"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/parse-result/#parameters","text":"requestCode - See Activity.onActivityResult resultCode - See Activity.onActivityResult data - See Activity.onActivityResult Return Parsed authorization result, null if requestCode is wrong","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams AuthParams \u00b6 data class AuthParams All necessary auth params For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user Constructors \u00b6 Name Summary <init> AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103)``AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103) All necessary auth params Properties \u00b6 Name Summary apiVersion val apiVersion: Double clientId val clientId: Int display val display: VkAuth.Display redirectUri val redirectUri: String responseType val responseType: VkAuth.ResponseType revoke val revoke: Boolean scope val scope: String state val state: String Functions \u00b6 Name Summary asBundle fun asBundle(withIgnored: Boolean ): Bundle Bundle used for the VK App authorization asQuery fun asQuery(): String Query used for manual authorization using the web page shown in the WebView","title":"AuthParams - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/#authparams","text":"data class AuthParams All necessary auth params For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"AuthParams"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/#constructors","text":"Name Summary <init> AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103)``AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103) All necessary auth params","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/#properties","text":"Name Summary apiVersion val apiVersion: Double clientId val clientId: Int display val display: VkAuth.Display redirectUri val redirectUri: String responseType val responseType: VkAuth.ResponseType revoke val revoke: Boolean scope val scope: String state val state: String","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/#functions","text":"Name Summary asBundle fun asBundle(withIgnored: Boolean ): Bundle Bundle used for the VK App authorization asQuery fun asQuery(): String Query used for manual authorization using the web page shown in the WebView","title":"Functions"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / <init> <init> \u00b6 AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103)``AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103) All necessary auth params For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/-init-/#init","text":"AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scopes: List < VkAuth.Scope > = listOf(), redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103)``AuthParams(clientId: Int , responseType: VkAuth.ResponseType , scope: String = \"\", redirectUri: String = VK_REDIRECT_URI_DEFAULT, display: VkAuth.Display = Display.Mobile, state: String = \"\", revoke: Boolean = true, apiVersion: Double = 5.103) All necessary auth params For the params description: See: https://vk.com/dev/access_token See: https://vk.com/dev/implicit_flow_user See: https://vk.com/dev/authcode_flow_user","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/api-version/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / apiVersion apiVersion \u00b6 val apiVersion: Double","title":"apiVersion - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/api-version/#apiversion","text":"val apiVersion: Double","title":"apiVersion"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/as-bundle/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / asBundle asBundle \u00b6 @CheckResult fun asBundle(withIgnored: Boolean ): Bundle Bundle used for the VK App authorization Parameters \u00b6 withIgnored - Some parameters are ignored by the VK App and may take unknown effect. Return Bundle with the params","title":"asBundle - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/as-bundle/#asbundle","text":"@CheckResult fun asBundle(withIgnored: Boolean ): Bundle Bundle used for the VK App authorization","title":"asBundle"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/as-bundle/#parameters","text":"withIgnored - Some parameters are ignored by the VK App and may take unknown effect. Return Bundle with the params","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/as-query/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / asQuery asQuery \u00b6 @CheckResult fun asQuery(): String Query used for manual authorization using the web page shown in the WebView Return client_id=...&scope=..., etc.","title":"asQuery - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/as-query/#asquery","text":"@CheckResult fun asQuery(): String Query used for manual authorization using the web page shown in the WebView Return client_id=...&scope=..., etc.","title":"asQuery"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/client-id/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / clientId clientId \u00b6 val clientId: Int","title":"clientId - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/client-id/#clientid","text":"val clientId: Int","title":"clientId"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/display/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / display display \u00b6 val display: VkAuth.Display","title":"display - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/display/#display","text":"val display: VkAuth.Display","title":"display"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/redirect-uri/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / redirectUri redirectUri \u00b6 val redirectUri: String","title":"redirectUri - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/redirect-uri/#redirecturi","text":"val redirectUri: String","title":"redirectUri"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/response-type/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / responseType responseType \u00b6 val responseType: VkAuth.ResponseType","title":"responseType - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/response-type/#responsetype","text":"val responseType: VkAuth.ResponseType","title":"responseType"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/revoke/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / revoke revoke \u00b6 val revoke: Boolean","title":"revoke - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/revoke/#revoke","text":"val revoke: Boolean","title":"revoke"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/scope/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / scope scope \u00b6 val scope: String","title":"scope - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/scope/#scope","text":"val scope: String","title":"scope"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/state/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / AuthParams / state state \u00b6 val state: String","title":"state - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-auth-params/state/#state","text":"val state: String","title":"state"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display Display \u00b6 enum class Display Display type of the authorization page. Prefer to use Mobile . Android and Ios are private type of the VK official clients. Enum Values \u00b6 Name Summary Mobile Mobile page without the JavaScript. Most preferred variant. Page New window Popup Popup Android Page which looks like part of the official VK Android app. Private and not documented Ios Page which looks like part of the official VK iOS app. Private and not documented Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Display - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/#display","text":"enum class Display Display type of the authorization page. Prefer to use Mobile . Android and Ios are private type of the VK official clients.","title":"Display"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/#enum-values","text":"Name Summary Mobile Mobile page without the JavaScript. Most preferred variant. Page New window Popup Popup Android Page which looks like part of the official VK Android app. Private and not documented Ios Page which looks like part of the official VK iOS app. Private and not documented","title":"Enum Values"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/#properties","text":"Name Summary stringValue val stringValue: String","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-android/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / Android Android \u00b6 Android Page which looks like part of the official VK Android app. Private and not documented Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Android - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-android/#android","text":"Android Page which looks like part of the official VK Android app. Private and not documented","title":"Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-android/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-ios/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / Ios Ios \u00b6 Ios Page which looks like part of the official VK iOS app. Private and not documented Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Ios - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-ios/#ios","text":"Ios Page which looks like part of the official VK iOS app. Private and not documented","title":"Ios"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-ios/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-mobile/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / Mobile Mobile \u00b6 Mobile Mobile page without the JavaScript. Most preferred variant. Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Mobile - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-mobile/#mobile","text":"Mobile Mobile page without the JavaScript. Most preferred variant.","title":"Mobile"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-mobile/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-page/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / Page Page \u00b6 Page New window Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Page - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-page/#page","text":"Page New window","title":"Page"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-page/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-popup/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / Popup Popup \u00b6 Popup Popup Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Popup - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-popup/#popup","text":"Popup Popup","title":"Popup"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/-popup/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/string-value/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Display / stringValue stringValue \u00b6 val stringValue: String","title":"stringValue - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-display/string-value/#stringvalue","text":"val stringValue: String","title":"stringValue"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-disposable-item/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / DisposableItem DisposableItem \u00b6 interface DisposableItem Some disposable item Functions \u00b6 Name Summary dispose abstract fun dispose(): Unit Use to clear listeners","title":"DisposableItem - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-disposable-item/#disposableitem","text":"interface DisposableItem Some disposable item","title":"DisposableItem"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-disposable-item/#functions","text":"Name Summary dispose abstract fun dispose(): Unit Use to clear listeners","title":"Functions"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-disposable-item/dispose/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / DisposableItem / dispose dispose \u00b6 abstract fun dispose(): Unit Use to clear listeners","title":"dispose - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-disposable-item/dispose/#dispose","text":"abstract fun dispose(): Unit Use to clear listeners","title":"dispose"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResponseType ResponseType \u00b6 enum class ResponseType Response type: access_token or code See: Enum Values \u00b6 Name Summary AccessToken See: https://vk.com/dev/implicit_flow_user Code See: https://vk.com/dev/authcode_flow_user Properties \u00b6 Name Summary stringValue val stringValue: String","title":"ResponseType - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/#responsetype","text":"enum class ResponseType Response type: access_token or code See:","title":"ResponseType"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/#enum-values","text":"Name Summary AccessToken See: https://vk.com/dev/implicit_flow_user Code See: https://vk.com/dev/authcode_flow_user","title":"Enum Values"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/#properties","text":"Name Summary stringValue val stringValue: String","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-access-token/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResponseType / AccessToken AccessToken \u00b6 AccessToken See: https://vk.com/dev/implicit_flow_user Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"AccessToken - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-access-token/#accesstoken","text":"AccessToken See: https://vk.com/dev/implicit_flow_user","title":"AccessToken"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-access-token/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-code/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResponseType / Code Code \u00b6 Code See: https://vk.com/dev/authcode_flow_user Inherited Properties \u00b6 Name Summary stringValue val stringValue: String","title":"Code - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-code/#code","text":"Code See: https://vk.com/dev/authcode_flow_user","title":"Code"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/-code/#inherited-properties","text":"Name Summary stringValue val stringValue: String","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/string-value/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResponseType / stringValue stringValue \u00b6 val stringValue: String","title":"stringValue - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-response-type/string-value/#stringvalue","text":"val stringValue: String","title":"stringValue"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-result-listener/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResultListener ResultListener \u00b6 interface ResultListener Inline listener for the auth result Functions \u00b6 Name Summary onResult abstract fun onResult(result: VkAuthResult ): Unit Handle the authorization result","title":"ResultListener - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-result-listener/#resultlistener","text":"interface ResultListener Inline listener for the auth result","title":"ResultListener"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-result-listener/#functions","text":"Name Summary onResult abstract fun onResult(result: VkAuthResult ): Unit Handle the authorization result","title":"Functions"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-result-listener/on-result/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / ResultListener / onResult onResult \u00b6 abstract fun onResult(result: VkAuthResult ): Unit Handle the authorization result","title":"onResult - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-result-listener/on-result/#onresult","text":"abstract fun onResult(result: VkAuthResult ): Unit Handle the authorization result","title":"onResult"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope Scope \u00b6 enum class Scope Access token scope permissions See: https://vk.com/dev/permissions Enum Values \u00b6 Name Summary Notify Friends Photos Audio Video Stories Pages LeftMenuLinks Status Notes Messages Wall Ads Offline Docs Groups Notifications Stats Email Market Properties \u00b6 Name Summary intValue val intValue: Int","title":"Scope - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/#scope","text":"enum class Scope Access token scope permissions See: https://vk.com/dev/permissions","title":"Scope"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/#enum-values","text":"Name Summary Notify Friends Photos Audio Video Stories Pages LeftMenuLinks Status Notes Messages Wall Ads Offline Docs Groups Notifications Stats Email Market","title":"Enum Values"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/#properties","text":"Name Summary intValue val intValue: Int","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-ads/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Ads Ads \u00b6 Ads Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Ads - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-ads/#ads","text":"Ads","title":"Ads"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-ads/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-audio/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Audio Audio \u00b6 Audio Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Audio - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-audio/#audio","text":"Audio","title":"Audio"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-audio/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-docs/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Docs Docs \u00b6 Docs Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Docs - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-docs/#docs","text":"Docs","title":"Docs"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-docs/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-email/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Email Email \u00b6 Email Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Email - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-email/#email","text":"Email","title":"Email"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-email/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-friends/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Friends Friends \u00b6 Friends Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Friends - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-friends/#friends","text":"Friends","title":"Friends"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-friends/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-groups/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Groups Groups \u00b6 Groups Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Groups - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-groups/#groups","text":"Groups","title":"Groups"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-groups/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-left-menu-links/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / LeftMenuLinks LeftMenuLinks \u00b6 LeftMenuLinks Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"LeftMenuLinks - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-left-menu-links/#leftmenulinks","text":"LeftMenuLinks","title":"LeftMenuLinks"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-left-menu-links/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-market/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Market Market \u00b6 Market Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Market - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-market/#market","text":"Market","title":"Market"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-market/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-messages/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Messages Messages \u00b6 Messages Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Messages - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-messages/#messages","text":"Messages","title":"Messages"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-messages/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notes/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Notes Notes \u00b6 Notes Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Notes - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notes/#notes","text":"Notes","title":"Notes"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notes/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notifications/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Notifications Notifications \u00b6 Notifications Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Notifications - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notifications/#notifications","text":"Notifications","title":"Notifications"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notifications/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notify/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Notify Notify \u00b6 Notify Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Notify - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notify/#notify","text":"Notify","title":"Notify"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-notify/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-offline/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Offline Offline \u00b6 Offline Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Offline - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-offline/#offline","text":"Offline","title":"Offline"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-offline/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-pages/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Pages Pages \u00b6 Pages Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Pages - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-pages/#pages","text":"Pages","title":"Pages"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-pages/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-photos/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Photos Photos \u00b6 Photos Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Photos - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-photos/#photos","text":"Photos","title":"Photos"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-photos/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stats/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Stats Stats \u00b6 Stats Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Stats - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stats/#stats","text":"Stats","title":"Stats"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stats/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-status/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Status Status \u00b6 Status Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Status - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-status/#status","text":"Status","title":"Status"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-status/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stories/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Stories Stories \u00b6 Stories Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Stories - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stories/#stories","text":"Stories","title":"Stories"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-stories/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-video/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Video Video \u00b6 Video Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Video - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-video/#video","text":"Video","title":"Video"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-video/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-wall/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / Wall Wall \u00b6 Wall Inherited Properties \u00b6 Name Summary intValue val intValue: Int","title":"Wall - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-wall/#wall","text":"Wall","title":"Wall"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/-wall/#inherited-properties","text":"Name Summary intValue val intValue: Int","title":"Inherited Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/int-value/","text":"auth / com.petersamokhin.vksdk.android.auth / VkAuth / Scope / intValue intValue \u00b6 val intValue: Int","title":"intValue - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth/-vk-auth/-scope/int-value/#intvalue","text":"val intValue: Int","title":"intValue"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/","text":"auth / com.petersamokhin.vksdk.android.auth.error Package com.petersamokhin.vksdk.android.auth.error \u00b6 Exceptions \u00b6 Name Summary VkAppMissingException class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed VkAuthCanceledException class VkAuthCanceledException : VkAuthException When user cancelled the auth process. VkAuthException open class VkAuthException : Exception Base error","title":"Package com.petersamokhin.vksdk.android.auth.error - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/#package-competersamokhinvksdkandroidautherror","text":"","title":"Package com.petersamokhin.vksdk.android.auth.error"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/#exceptions","text":"Name Summary VkAppMissingException class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed VkAuthCanceledException class VkAuthCanceledException : VkAuthException When user cancelled the auth process. VkAuthException open class VkAuthException : Exception Base error","title":"Exceptions"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAppMissingException VkAppMissingException \u00b6 class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed Constructors \u00b6 Name Summary <init> VkAppMissingException(message: String ? = null, cause: Throwable ? = null) Thrown if the official VK App is not installed Properties \u00b6 Name Summary cause val cause: Throwable ? message val message: String ?","title":"VkAppMissingException - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/#vkappmissingexception","text":"class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed","title":"VkAppMissingException"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/#constructors","text":"Name Summary <init> VkAppMissingException(message: String ? = null, cause: Throwable ? = null) Thrown if the official VK App is not installed","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/#properties","text":"Name Summary cause val cause: Throwable ? message val message: String ?","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.error / VkAppMissingException / <init> <init> \u00b6 VkAppMissingException(message: String ? = null, cause: Throwable ? = null) Thrown if the official VK App is not installed","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAppMissingException / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/-init-/#init","text":"VkAppMissingException(message: String ? = null, cause: Throwable ? = null) Thrown if the official VK App is not installed","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/cause/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAppMissingException / cause cause \u00b6 val cause: Throwable ? Overrides VkAuthException.cause","title":"cause - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/cause/#cause","text":"val cause: Throwable ? Overrides VkAuthException.cause","title":"cause"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/message/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAppMissingException / message message \u00b6 val message: String ? Overrides VkAuthException.message","title":"message - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-app-missing-exception/message/#message","text":"val message: String ? Overrides VkAuthException.message","title":"message"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthCanceledException VkAuthCanceledException \u00b6 class VkAuthCanceledException : VkAuthException When user cancelled the auth process. Constructors \u00b6 Name Summary <init> VkAuthCanceledException(message: String ? = null, cause: Throwable ? = null) When user cancelled the auth process. Properties \u00b6 Name Summary cause val cause: Throwable ? message val message: String ?","title":"VkAuthCanceledException - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/#vkauthcanceledexception","text":"class VkAuthCanceledException : VkAuthException When user cancelled the auth process.","title":"VkAuthCanceledException"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/#constructors","text":"Name Summary <init> VkAuthCanceledException(message: String ? = null, cause: Throwable ? = null) When user cancelled the auth process.","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/#properties","text":"Name Summary cause val cause: Throwable ? message val message: String ?","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.error / VkAuthCanceledException / <init> <init> \u00b6 VkAuthCanceledException(message: String ? = null, cause: Throwable ? = null) When user cancelled the auth process.","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthCanceledException / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/-init-/#init","text":"VkAuthCanceledException(message: String ? = null, cause: Throwable ? = null) When user cancelled the auth process.","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/cause/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthCanceledException / cause cause \u00b6 val cause: Throwable ? Overrides VkAuthException.cause","title":"cause - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/cause/#cause","text":"val cause: Throwable ? Overrides VkAuthException.cause","title":"cause"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/message/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthCanceledException / message message \u00b6 val message: String ? Overrides VkAuthException.message","title":"message - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-canceled-exception/message/#message","text":"val message: String ? Overrides VkAuthException.message","title":"message"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthException VkAuthException \u00b6 open class VkAuthException : Exception Base error Constructors \u00b6 Name Summary <init> VkAuthException(message: String ? = null, cause: Throwable ? = null) Base error Properties \u00b6 Name Summary cause open val cause: Throwable ? message open val message: String ? Inheritors \u00b6 Name Summary VkAppMissingException class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed VkAuthCanceledException class VkAuthCanceledException : VkAuthException When user cancelled the auth process.","title":"VkAuthException - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/#vkauthexception","text":"open class VkAuthException : Exception Base error","title":"VkAuthException"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/#constructors","text":"Name Summary <init> VkAuthException(message: String ? = null, cause: Throwable ? = null) Base error","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/#properties","text":"Name Summary cause open val cause: Throwable ? message open val message: String ?","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/#inheritors","text":"Name Summary VkAppMissingException class VkAppMissingException : VkAuthException Thrown if the official VK App is not installed VkAuthCanceledException class VkAuthCanceledException : VkAuthException When user cancelled the auth process.","title":"Inheritors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.error / VkAuthException / <init> <init> \u00b6 VkAuthException(message: String ? = null, cause: Throwable ? = null) Base error","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthException / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/-init-/#init","text":"VkAuthException(message: String ? = null, cause: Throwable ? = null) Base error","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/cause/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthException / cause cause \u00b6 open val cause: Throwable ?","title":"cause - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/cause/#cause","text":"open val cause: Throwable ?","title":"cause"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/message/","text":"auth / com.petersamokhin.vksdk.android.auth.error / VkAuthException / message message \u00b6 open val message: String ?","title":"message - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.error/-vk-auth-exception/message/#message","text":"open val message: String ?","title":"message"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/","text":"auth / com.petersamokhin.vksdk.android.auth.model Package com.petersamokhin.vksdk.android.auth.model \u00b6 Types \u00b6 Name Summary VkAuthResult sealed class VkAuthResult Authorization result based on the type of auth and on successfullness.","title":"Package com.petersamokhin.vksdk.android.auth.model - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/#package-competersamokhinvksdkandroidauthmodel","text":"","title":"Package com.petersamokhin.vksdk.android.auth.model"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/#types","text":"Name Summary VkAuthResult sealed class VkAuthResult Authorization result based on the type of auth and on successfullness.","title":"Types"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult VkAuthResult \u00b6 sealed class VkAuthResult Authorization result based on the type of auth and on successfullness. Types \u00b6 Name Summary AccessToken data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Code data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Error data class Error : VkAuthResult Successful result for the request with response_type=code Inheritors \u00b6 Name Summary AccessToken data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Code data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Error data class Error : VkAuthResult Successful result for the request with response_type=code","title":"VkAuthResult - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/#vkauthresult","text":"sealed class VkAuthResult Authorization result based on the type of auth and on successfullness.","title":"VkAuthResult"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/#types","text":"Name Summary AccessToken data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Code data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Error data class Error : VkAuthResult Successful result for the request with response_type=code","title":"Types"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/#inheritors","text":"Name Summary AccessToken data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Code data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Error data class Error : VkAuthResult Successful result for the request with response_type=code","title":"Inheritors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken AccessToken \u00b6 data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Parameters \u00b6 accessToken - Access token expiresIn - Expire time of the access token; 0 == forever userId - User ID email - User email. Only provided if this scope was requested and if user had not disallowed the access. state - An arbitrary string that is returned together with authorization result, only if was provided with the request. Constructors \u00b6 Name Summary <init> AccessToken(accessToken: String , expiresIn: Int , userId: Int , email: String ?, state: String ?) Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Properties \u00b6 Name Summary accessToken val accessToken: String Access token email val email: String ? User email. Only provided if this scope was requested and if user had not disallowed the access. expiresIn val expiresIn: Int Expire time of the access token; 0 == forever state val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request. userId val userId: Int User ID","title":"AccessToken - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/#accesstoken","text":"data class AccessToken : VkAuthResult Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user","title":"AccessToken"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/#parameters","text":"accessToken - Access token expiresIn - Expire time of the access token; 0 == forever userId - User ID email - User email. Only provided if this scope was requested and if user had not disallowed the access. state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/#constructors","text":"Name Summary <init> AccessToken(accessToken: String , expiresIn: Int , userId: Int , email: String ?, state: String ?) Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/#properties","text":"Name Summary accessToken val accessToken: String Access token email val email: String ? User email. Only provided if this scope was requested and if user had not disallowed the access. expiresIn val expiresIn: Int Expire time of the access token; 0 == forever state val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request. userId val userId: Int User ID","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / <init> <init> \u00b6 AccessToken(accessToken: String , expiresIn: Int , userId: Int , email: String ?, state: String ?) Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user Parameters \u00b6 accessToken - Access token expiresIn - Expire time of the access token; 0 == forever userId - User ID email - User email. Only provided if this scope was requested and if user had not disallowed the access. state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/-init-/#init","text":"AccessToken(accessToken: String , expiresIn: Int , userId: Int , email: String ?, state: String ?) Successful result for the request with response_type=access_token See: https://vk.com/dev/implicit_flow_user","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/-init-/#parameters","text":"accessToken - Access token expiresIn - Expire time of the access token; 0 == forever userId - User ID email - User email. Only provided if this scope was requested and if user had not disallowed the access. state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/access-token/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / accessToken accessToken \u00b6 val accessToken: String Access token","title":"accessToken - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/access-token/#accesstoken","text":"val accessToken: String Access token","title":"accessToken"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/email/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / email email \u00b6 val email: String ? User email. Only provided if this scope was requested and if user had not disallowed the access.","title":"email - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/email/#email","text":"val email: String ? User email. Only provided if this scope was requested and if user had not disallowed the access.","title":"email"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/expires-in/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / expiresIn expiresIn \u00b6 val expiresIn: Int Expire time of the access token; 0 == forever","title":"expiresIn - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/expires-in/#expiresin","text":"val expiresIn: Int Expire time of the access token; 0 == forever","title":"expiresIn"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/state/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / state state \u00b6 val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"state - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/state/#state","text":"val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"state"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/user-id/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / AccessToken / userId userId \u00b6 val userId: Int User ID","title":"userId - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-access-token/user-id/#userid","text":"val userId: Int User ID","title":"userId"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Code Code \u00b6 data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Parameters \u00b6 code - Code state - An arbitrary string that is returned together with authorization result, only if was provided with the request. Constructors \u00b6 Name Summary <init> Code(code: String , state: String ?) Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Properties \u00b6 Name Summary code val code: String Code state val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Code - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/#code","text":"data class Code : VkAuthResult Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user","title":"Code"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/#parameters","text":"code - Code state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/#constructors","text":"Name Summary <init> Code(code: String , state: String ?) Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/#properties","text":"Name Summary code val code: String Code state val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Code / <init> <init> \u00b6 Code(code: String , state: String ?) Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user Parameters \u00b6 code - Code state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Code / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/-init-/#init","text":"Code(code: String , state: String ?) Successful result for the request with response_type=code See: https://vk.com/dev/authcode_flow_user","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/-init-/#parameters","text":"code - Code state - An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/code/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Code / code code \u00b6 val code: String Code","title":"code - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/code/#code","text":"val code: String Code","title":"code"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/state/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Code / state state \u00b6 val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"state - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-code/state/#state","text":"val state: String ? An arbitrary string that is returned together with authorization result, only if was provided with the request.","title":"state"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error Error \u00b6 data class Error : VkAuthResult Successful result for the request with response_type=code Parameters \u00b6 error - Error from the response description - Error description from the response exception - If error occurred before the request Constructors \u00b6 Name Summary <init> Error(error: String ? = null, description: String ? = null, reason: String ? = null, exception: Exception ? = null) Successful result for the request with response_type=code Properties \u00b6 Name Summary description val description: String ? Error description from the response error val error: String ? Error from the response exception val exception: Exception ? If error occurred before the request reason val reason: String ?","title":"Error - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/#error","text":"data class Error : VkAuthResult Successful result for the request with response_type=code","title":"Error"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/#parameters","text":"error - Error from the response description - Error description from the response exception - If error occurred before the request","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/#constructors","text":"Name Summary <init> Error(error: String ? = null, description: String ? = null, reason: String ? = null, exception: Exception ? = null) Successful result for the request with response_type=code","title":"Constructors"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/#properties","text":"Name Summary description val description: String ? Error description from the response error val error: String ? Error from the response exception val exception: Exception ? If error occurred before the request reason val reason: String ?","title":"Properties"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/-init-/","text":"title: <init> - VK SDK Android \u00b6 auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / <init> <init> \u00b6 Error(error: String ? = null, description: String ? = null, reason: String ? = null, exception: Exception ? = null) Successful result for the request with response_type=code Parameters \u00b6 error - Error from the response description - Error description from the response exception - If error occurred before the request","title":" init "},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/-init-/#title-init-vk-sdk-android","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / <init>","title":"title: &lt;init&gt; - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/-init-/#init","text":"Error(error: String ? = null, description: String ? = null, reason: String ? = null, exception: Exception ? = null) Successful result for the request with response_type=code","title":"&lt;init&gt;"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/-init-/#parameters","text":"error - Error from the response description - Error description from the response exception - If error occurred before the request","title":"Parameters"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/description/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / description description \u00b6 val description: String ? Error description from the response","title":"description - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/description/#description","text":"val description: String ? Error description from the response","title":"description"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/error/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / error error \u00b6 val error: String ? Error from the response","title":"error - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/error/#error","text":"val error: String ? Error from the response","title":"error"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/exception/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / exception exception \u00b6 val exception: Exception ? If error occurred before the request","title":"exception - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/exception/#exception","text":"val exception: Exception ? If error occurred before the request","title":"exception"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/reason/","text":"auth / com.petersamokhin.vksdk.android.auth.model / VkAuthResult / Error / reason reason \u00b6 val reason: String ?","title":"reason - VK SDK Android"},{"location":"0.0.x/auth/com.petersamokhin.vksdk.android.auth.model/-vk-auth-result/-error/reason/#reason","text":"val reason: String ?","title":"reason"}]}